server:
  port: ${PORT:8080}
  error:
    whitelabel:
      enabled: false
spring:
  datasource:
    url: ${DATABASE_URL}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: ${HIKARI_MAX_POOL_SIZE:20}
      connection-timeout: ${HIKARI_CONNECTION_TIMEOUT:30000}
      idle-timeout: ${HIKARI_IDLE_TIMEOUT:600000}
      max-lifetime: ${HIKARI_MAX_LIFETIME:1800000}
      leak-detection-threshold: ${HIKARI_LEAK_DETECTION:30000}
      auto-commit: ${HIKARI_AUTO_COMMIT:false}
      pool-name: ${HIKARI_POOL_NAME:"BackendPool"}
      connection-test-query: SELECT 1
      test-on-borrow: true
      data-source-properties:
        preparedStatementCacheQueries: 256
        socketTimeout: 30
  jpa:
    show-sql: ${JPA_SHOW_SQL:true}
    hibernate:
      ddl-auto: ${HIBERNATE_DDL_AUTO:update}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        connection.provider_disables_autocommit: true
        order_inserts: true
        order_updates: true
        jdbc.batch_size: 20
  flyway:
    enabled: ${FLYWAY_ENABLED:false}
    locations: classpath:db/migration
  cache:
    type: caffeine
  jackson:
    serialization:
      write-dates-as-timestamps: false
  mvc:
    problemdetails:
      enabled: true
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
        starttls:
          enable: true

management:
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus,info
  endpoint:
    health:
      probes:
        enabled: true
  metrics:
    tags:
      application: ${METRICS_APP_NAME:backend-otp}

security:
  jwt:
    secret: ${JWT_SECRET}
    issuer: ${JWT_ISSUER:referral-app}
    expiration-minutes: ${JWT_EXPIRATION:60000}

twilio:
  enabled: ${TWILIO_ENABLED:true}
  accountSid: ${TWILIO_ACCOUNT_SID}
  authToken: ${TWILIO_AUTH_TOKEN}
  fromNumber: ${TWILIO_FROM_NUMBER}

otp:
  ttl-minutes: ${OTP_TTL:5}
  max-requests-per-5m: ${OTP_MAX_REQUESTS:3}

cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:5173}
  allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
  allowed-headers: ${CORS_ALLOWED_HEADERS:'*'}

referral:
  base-url: ${REFERRAL_BASE_URL:https://app.example.com/ref}

file:
  upload-dir: ${FILE_UPLOAD_DIR:uploads/}

logging:
  level:
    org:
      hibernate.SQL: ${LOG_LEVEL_HIBERNATE_SQL:DEBUG}
      hibernate.type: ${LOG_LEVEL_HIBERNATE_TYPE:TRACE}
      springframework:
        security: ${LOG_LEVEL_SECURITY:DEBUG}
        web: ${LOG_LEVEL_WEB:DEBUG}
        jdbc: ${LOG_LEVEL_JDBC:DEBUG}
    com.zaxxer.hikari: ${LOG_LEVEL_HIKARI:DEBUG}